* { /* universial select */
    margin: 0;
    padding: 0;
    box-sizing: border-box; /* no margin and padding for box */
}

body { /* get inherited by all child element of body */
     font-family: "Lato", sans-serif;
     font-size: 16px;
     font-weight: 400;
     line-height: 1.7; /* 1.7 times bigger than the predefined line height */
     color: #777;
     padding: 30px;
}

.header {
    height: 95vh; /* 95% view point height. 5% of space below of the window   */
    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
    background-size: cover; /* fit the element inside of the box */
    background-position: top; /* background img stay on the top. if it's "bottom" and size is changed, top part will be cropped  */

    position : relative;
    clip-path:  polygon(0 0, 100% 0, 100% 75vh,  0 100%)/*  clip out part of image,  left-top x y , right-top x y , right-bottom x y , left-bottom x y */
    /* https://bennettfeely.com/clippy/ */
}

.logo-box{ 
    position: absolute;
    top: 40px; /* reference (where top from) : parent element --> in this case : header */
    left: 40px;
}
.logo {
    height: 35px;
}

/* .logo:hover {
    animation : moveInRight 1s ease-out;
} */

.text-box {
    position: absolute;
    top: 40%; /* relation to the parent element */
    left: 50%;
    transform: translate(-50%, -50%); 
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;
    
    backface-visibility: hidden; /* if the back part of the element when we transform it, is visible or hidden for the user. */
    margin-bottom: 60px;
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 900; /* font thickness */
    letter-spacing:  35px;

    animation-name: moveInLeft;
    animation-duration: 1s;
    /* animation-delay: 3s; */ /* duration before animation start */
    /* animation-iteration-count: 3; */ 
    animation-timing-function: ease-out 
    /* ease-in : the animation will start slower and then accelate over time */
    /* ease-out : fater -> slower */

     
}
.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 900;
    letter-spacing: 17.4px;

    animation: moveInRight;
    animation-duration: 1s;
}

/* animation */
@keyframes moveInLeft {
    0% { /* animation start */
        opacity: 0;
        transform: translateX(-100px);
    }
    /* 60% { 
        transform: rotate(120deg);
    } */
    80% { 
        transform: translateX(10px);
    }
    100% { /* animation end */
        opacity: 1;
        transform: translate(0); 
    }
}

@keyframes moveInRight {
    0% { /* animation start */
        opacity: 0;
        transform: translateX(100px);
    }
    80% {     
        transform: translateX(-10px);
    }
    100% { /* animation end */
        opacity: 1;
        transform: translate(0); 
    }
}

@keyframes moveInBottom {
    0% { /* animation start */
        opacity: 0;
        transform: translateY(30px);
    }
    
    100% { /* animation end */
        opacity: 1;
        transform: translate(0); 
    }
}


.btn:link, 
.btn:visited { /* :link : pseudo-class is a speacial state of a selector. button condition  */
     text-transform: uppercase;
     text-decoration: none;
     padding: 15px 40px; /* top bottom left right*/
     display: inline-block;
     border-radius: 100px;
     transition: all .2s; /* should be located in initial state, then affect to related states, hover, active ... */

     position: relative;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0,0,0,.2); /* x-direction shadow(0), y-direction(10px), blur(20px), color    */

}

.btn:active { /* when click */
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0,0,0,.2);
}

.btn-white {
    background: #fff;
    color: #777;
}

.btn::after { /* another element after the origin element */
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position : absolute;
    top: 0;
    left: 0;
    z-index: -1; 
    transition: all .4s;
}

.btn-white::after {
    background: #fff;
}
 
.btn:hover::after { /* after pseudo element only when the button hover */
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn-animated {
    animation: moveInBottom .5s ease-out .75s; /* animation-name, duration, timing-function, delay */
    animation-fill-mode: backwards; /* style 0% (in animation) before the animation start  */
}